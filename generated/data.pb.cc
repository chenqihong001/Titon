// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 6.32.0

#include "data.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr TemperatureData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        celsius_{0},
        fahrenheit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TemperatureData::TemperatureData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TemperatureData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TemperatureDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TemperatureDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TemperatureDataDefaultTypeInternal() {}
  union {
    TemperatureData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TemperatureDataDefaultTypeInternal _TemperatureData_default_instance_;

inline constexpr MotionData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acceleration_x_{0},
        acceleration_y_{0},
        acceleration_z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MotionData::MotionData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MotionData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MotionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotionDataDefaultTypeInternal() {}
  union {
    MotionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotionDataDefaultTypeInternal _MotionData_default_instance_;

inline constexpr HumidityData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        relative_humidity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HumidityData::HumidityData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HumidityData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HumidityDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HumidityDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HumidityDataDefaultTypeInternal() {}
  union {
    HumidityData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HumidityDataDefaultTypeInternal _HumidityData_default_instance_;

inline constexpr SensorData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        sampling_duration_{nullptr},
        data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SensorData::SensorData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SensorData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorDataDefaultTypeInternal() {}
  union {
    SensorData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorDataDefaultTypeInternal _SensorData_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_data_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_data_2eproto = nullptr;
const ::uint32_t
    TableStruct_data_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_._oneof_case_[0]),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.sampling_duration_),
        PROTOBUF_FIELD_OFFSET(::SensorData, _impl_.data_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::TemperatureData, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::TemperatureData, _impl_.celsius_),
        PROTOBUF_FIELD_OFFSET(::TemperatureData, _impl_.fahrenheit_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::HumidityData, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::HumidityData, _impl_.relative_humidity_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::MotionData, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::MotionData, _impl_.acceleration_x_),
        PROTOBUF_FIELD_OFFSET(::MotionData, _impl_.acceleration_y_),
        PROTOBUF_FIELD_OFFSET(::MotionData, _impl_.acceleration_z_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::SensorData)},
        {17, sizeof(::TemperatureData)},
        {24, sizeof(::HumidityData)},
        {29, sizeof(::MotionData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_SensorData_default_instance_._instance,
    &::_TemperatureData_default_instance_._instance,
    &::_HumidityData_default_instance_._instance,
    &::_MotionData_default_instance_._instance,
};
const char descriptor_table_protodef_data_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ndata.proto\032\037google/protobuf/timestamp."
    "proto\032\036google/protobuf/duration.proto\"\377\001"
    "\n\nSensorData\022\021\n\tsensor_id\030\001 \001(\t\022-\n\ttimes"
    "tamp\030\002 \001(\0132\032.google.protobuf.Timestamp\022%"
    "\n\ttemp_data\030\003 \001(\0132\020.TemperatureDataH\000\022&\n"
    "\rhumidity_data\030\004 \001(\0132\r.HumidityDataH\000\022\"\n"
    "\013motion_data\030\005 \001(\0132\013.MotionDataH\000\0224\n\021sam"
    "pling_duration\030\006 \001(\0132\031.google.protobuf.D"
    "urationB\006\n\004data\"6\n\017TemperatureData\022\017\n\007ce"
    "lsius\030\001 \001(\002\022\022\n\nfahrenheit\030\002 \001(\002\")\n\014Humid"
    "ityData\022\031\n\021relative_humidity\030\001 \001(\002\"T\n\nMo"
    "tionData\022\026\n\016acceleration_x\030\001 \001(\002\022\026\n\016acce"
    "leration_y\030\002 \001(\002\022\026\n\016acceleration_z\030\003 \001(\002"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_data_2eproto_deps[2] = {
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_data_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_data_2eproto = {
    false,
    false,
    528,
    descriptor_table_protodef_data_2eproto,
    "data.proto",
    &descriptor_table_data_2eproto_once,
    descriptor_table_data_2eproto_deps,
    2,
    4,
    schemas,
    file_default_instances,
    TableStruct_data_2eproto::offsets,
    file_level_enum_descriptors_data_2eproto,
    file_level_service_descriptors_data_2eproto,
};
// ===================================================================

class SensorData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SensorData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SensorData, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::SensorData, _impl_._oneof_case_);
};

void SensorData::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void SensorData::set_allocated_temp_data(::TemperatureData* PROTOBUF_NULLABLE temp_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (temp_data) {
    ::google::protobuf::Arena* submessage_arena = temp_data->GetArena();
    if (message_arena != submessage_arena) {
      temp_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, temp_data, submessage_arena);
    }
    set_has_temp_data();
    _impl_.data_.temp_data_ = temp_data;
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.temp_data)
}
void SensorData::set_allocated_humidity_data(::HumidityData* PROTOBUF_NULLABLE humidity_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (humidity_data) {
    ::google::protobuf::Arena* submessage_arena = humidity_data->GetArena();
    if (message_arena != submessage_arena) {
      humidity_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, humidity_data, submessage_arena);
    }
    set_has_humidity_data();
    _impl_.data_.humidity_data_ = humidity_data;
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.humidity_data)
}
void SensorData::set_allocated_motion_data(::MotionData* PROTOBUF_NULLABLE motion_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (motion_data) {
    ::google::protobuf::Arena* submessage_arena = motion_data->GetArena();
    if (message_arena != submessage_arena) {
      motion_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, motion_data, submessage_arena);
    }
    set_has_motion_data();
    _impl_.data_.motion_data_ = motion_data;
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.motion_data)
}
void SensorData::clear_sampling_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sampling_duration_ != nullptr) _impl_.sampling_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
SensorData::SensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SensorData)
}
PROTOBUF_NDEBUG_INLINE SensorData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::SensorData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sensor_id_(arena, from.sensor_id_),
        data_{},
        _oneof_case_{from._oneof_case_[0]} {}

SensorData::SensorData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SensorData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.sampling_duration_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sampling_duration_)
                : nullptr;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kTempData:
        _impl_.data_.temp_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.temp_data_);
        break;
      case kHumidityData:
        _impl_.data_.humidity_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.humidity_data_);
        break;
      case kMotionData:
        _impl_.data_.motion_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.motion_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:SensorData)
}
PROTOBUF_NDEBUG_INLINE SensorData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sensor_id_(arena),
        data_{},
        _oneof_case_{} {}

inline void SensorData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, sampling_duration_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::sampling_duration_));
}
SensorData::~SensorData() {
  // @@protoc_insertion_point(destructor:SensorData)
  SharedDtor(*this);
}
inline void SensorData::SharedDtor(MessageLite& self) {
  SensorData& this_ = static_cast<SensorData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sensor_id_.Destroy();
  delete this_._impl_.timestamp_;
  delete this_._impl_.sampling_duration_;
  if (this_.has_data()) {
    this_.clear_data();
  }
  this_._impl_.~Impl_();
}

void SensorData::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:SensorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kTempData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.temp_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.temp_data_);
      }
      break;
    }
    case kHumidityData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.humidity_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.humidity_data_);
      }
      break;
    }
    case kMotionData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.motion_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.motion_data_);
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL SensorData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SensorData(arena);
}
constexpr auto SensorData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorData),
                                            alignof(SensorData));
}
constexpr auto SensorData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SensorData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SensorData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SensorData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SensorData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SensorData>(), &SensorData::ByteSizeLong,
              &SensorData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SensorData, _impl_._cached_size_),
          false,
      },
      &SensorData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SensorData_class_data_ =
        SensorData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SensorData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SensorData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SensorData_class_data_.tc_table);
  return SensorData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 28, 2>
SensorData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SensorData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SensorData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sensor_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sensor_id_)}},
    // .google.protobuf.Timestamp timestamp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Duration sampling_duration = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 4, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sampling_duration_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sensor_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sensor_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .TemperatureData temp_data = 3;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_.temp_data_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .HumidityData humidity_data = 4;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_.humidity_data_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MotionData motion_data = 5;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_.motion_data_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration sampling_duration = 6;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sampling_duration_), _Internal::kHasBitsOffset + 2, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::TemperatureData>()},
      {::_pbi::TcParser::GetTable<::HumidityData>()},
      {::_pbi::TcParser::GetTable<::MotionData>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
    "\12\11\0\0\0\0\0\0"
    "SensorData"
    "sensor_id"
  }},
};
PROTOBUF_NOINLINE void SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:SensorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.sensor_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.sampling_duration_ != nullptr);
      _impl_.sampling_duration_->Clear();
    }
  }
  clear_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SensorData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SensorData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:SensorData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sensor_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_sensor_id().empty()) {
      const ::std::string& _s = this_._internal_sensor_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SensorData.sensor_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 2;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  switch (this_.data_case()) {
    case kTempData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.data_.temp_data_, this_._impl_.data_.temp_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kHumidityData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.data_.humidity_data_, this_._impl_.data_.humidity_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMotionData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.data_.motion_data_, this_._impl_.data_.motion_data_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  // .google.protobuf.Duration sampling_duration = 6;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.sampling_duration_, this_._impl_.sampling_duration_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SensorData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SensorData::ByteSizeLong(const MessageLite& base) {
  const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SensorData::ByteSizeLong() const {
  const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SensorData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string sensor_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_sensor_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sensor_id());
      }
    }
    // .google.protobuf.Timestamp timestamp = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .google.protobuf.Duration sampling_duration = 6;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sampling_duration_);
    }
  }
  switch (this_.data_case()) {
    // .TemperatureData temp_data = 3;
    case kTempData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.temp_data_);
      break;
    }
    // .HumidityData humidity_data = 4;
    case kHumidityData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.humidity_data_);
      break;
    }
    // .MotionData motion_data = 5;
    case kMotionData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_.motion_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SensorData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorData*>(&to_msg);
  auto& from = static_cast<const SensorData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SensorData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_sensor_id().empty()) {
        _this->_internal_set_sensor_id(from._internal_sensor_id());
      } else {
        if (_this->_impl_.sensor_id_.IsDefault()) {
          _this->_internal_set_sensor_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.sampling_duration_ != nullptr);
      if (_this->_impl_.sampling_duration_ == nullptr) {
        _this->_impl_.sampling_duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sampling_duration_);
      } else {
        _this->_impl_.sampling_duration_->MergeFrom(*from._impl_.sampling_duration_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTempData: {
        if (oneof_needs_init) {
          _this->_impl_.data_.temp_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.temp_data_);
        } else {
          _this->_impl_.data_.temp_data_->MergeFrom(*from._impl_.data_.temp_data_);
        }
        break;
      }
      case kHumidityData: {
        if (oneof_needs_init) {
          _this->_impl_.data_.humidity_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.humidity_data_);
        } else {
          _this->_impl_.data_.humidity_data_->MergeFrom(*from._impl_.data_.humidity_data_);
        }
        break;
      }
      case kMotionData: {
        if (oneof_needs_init) {
          _this->_impl_.data_.motion_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_.motion_data_);
        } else {
          _this->_impl_.data_.motion_data_->MergeFrom(*from._impl_.data_.motion_data_);
        }
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorData::CopyFrom(const SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorData::InternalSwap(SensorData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sampling_duration_)
      + sizeof(SensorData::_impl_.sampling_duration_)
      - PROTOBUF_FIELD_OFFSET(SensorData, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SensorData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TemperatureData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TemperatureData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_._has_bits_);
};

TemperatureData::TemperatureData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemperatureData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TemperatureData)
}
TemperatureData::TemperatureData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TemperatureData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemperatureData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TemperatureData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TemperatureData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, celsius_),
           0,
           offsetof(Impl_, fahrenheit_) -
               offsetof(Impl_, celsius_) +
               sizeof(Impl_::fahrenheit_));
}
TemperatureData::~TemperatureData() {
  // @@protoc_insertion_point(destructor:TemperatureData)
  SharedDtor(*this);
}
inline void TemperatureData::SharedDtor(MessageLite& self) {
  TemperatureData& this_ = static_cast<TemperatureData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TemperatureData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TemperatureData(arena);
}
constexpr auto TemperatureData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TemperatureData),
                                            alignof(TemperatureData));
}
constexpr auto TemperatureData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TemperatureData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TemperatureData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TemperatureData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TemperatureData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TemperatureData>(), &TemperatureData::ByteSizeLong,
              &TemperatureData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_._cached_size_),
          false,
      },
      &TemperatureData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TemperatureData_class_data_ =
        TemperatureData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TemperatureData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TemperatureData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TemperatureData_class_data_.tc_table);
  return TemperatureData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TemperatureData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TemperatureData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TemperatureData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float fahrenheit = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.fahrenheit_)}},
    // float celsius = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.celsius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float celsius = 1;
    {PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.celsius_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float fahrenheit = 2;
    {PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.fahrenheit_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TemperatureData::Clear() {
// @@protoc_insertion_point(message_clear_start:TemperatureData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.celsius_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fahrenheit_) -
        reinterpret_cast<char*>(&_impl_.celsius_)) + sizeof(_impl_.fahrenheit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TemperatureData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TemperatureData& this_ = static_cast<const TemperatureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TemperatureData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TemperatureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:TemperatureData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float celsius = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_celsius()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_celsius(), target);
    }
  }

  // float fahrenheit = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_fahrenheit()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_fahrenheit(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TemperatureData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TemperatureData::ByteSizeLong(const MessageLite& base) {
  const TemperatureData& this_ = static_cast<const TemperatureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TemperatureData::ByteSizeLong() const {
  const TemperatureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TemperatureData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // float celsius = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_celsius()) != 0) {
        total_size += 5;
      }
    }
    // float fahrenheit = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_fahrenheit()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TemperatureData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TemperatureData*>(&to_msg);
  auto& from = static_cast<const TemperatureData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:TemperatureData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_celsius()) != 0) {
        _this->_impl_.celsius_ = from._impl_.celsius_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_fahrenheit()) != 0) {
        _this->_impl_.fahrenheit_ = from._impl_.fahrenheit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TemperatureData::CopyFrom(const TemperatureData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TemperatureData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TemperatureData::InternalSwap(TemperatureData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.fahrenheit_)
      + sizeof(TemperatureData::_impl_.fahrenheit_)
      - PROTOBUF_FIELD_OFFSET(TemperatureData, _impl_.celsius_)>(
          reinterpret_cast<char*>(&_impl_.celsius_),
          reinterpret_cast<char*>(&other->_impl_.celsius_));
}

::google::protobuf::Metadata TemperatureData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HumidityData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HumidityData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HumidityData, _impl_._has_bits_);
};

HumidityData::HumidityData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HumidityData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HumidityData)
}
HumidityData::HumidityData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HumidityData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HumidityData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE HumidityData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HumidityData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.relative_humidity_ = {};
}
HumidityData::~HumidityData() {
  // @@protoc_insertion_point(destructor:HumidityData)
  SharedDtor(*this);
}
inline void HumidityData::SharedDtor(MessageLite& self) {
  HumidityData& this_ = static_cast<HumidityData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HumidityData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HumidityData(arena);
}
constexpr auto HumidityData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HumidityData),
                                            alignof(HumidityData));
}
constexpr auto HumidityData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HumidityData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HumidityData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HumidityData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HumidityData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HumidityData>(), &HumidityData::ByteSizeLong,
              &HumidityData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HumidityData, _impl_._cached_size_),
          false,
      },
      &HumidityData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HumidityData_class_data_ =
        HumidityData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HumidityData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HumidityData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HumidityData_class_data_.tc_table);
  return HumidityData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
HumidityData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HumidityData, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HumidityData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HumidityData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float relative_humidity = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(HumidityData, _impl_.relative_humidity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float relative_humidity = 1;
    {PROTOBUF_FIELD_OFFSET(HumidityData, _impl_.relative_humidity_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void HumidityData::Clear() {
// @@protoc_insertion_point(message_clear_start:HumidityData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relative_humidity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HumidityData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HumidityData& this_ = static_cast<const HumidityData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HumidityData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HumidityData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:HumidityData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float relative_humidity = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_relative_humidity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_relative_humidity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HumidityData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HumidityData::ByteSizeLong(const MessageLite& base) {
  const HumidityData& this_ = static_cast<const HumidityData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HumidityData::ByteSizeLong() const {
  const HumidityData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:HumidityData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // float relative_humidity = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_relative_humidity()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HumidityData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HumidityData*>(&to_msg);
  auto& from = static_cast<const HumidityData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:HumidityData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(from._internal_relative_humidity()) != 0) {
      _this->_impl_.relative_humidity_ = from._impl_.relative_humidity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HumidityData::CopyFrom(const HumidityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HumidityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HumidityData::InternalSwap(HumidityData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.relative_humidity_, other->_impl_.relative_humidity_);
}

::google::protobuf::Metadata HumidityData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MotionData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MotionData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MotionData, _impl_._has_bits_);
};

MotionData::MotionData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MotionData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MotionData)
}
MotionData::MotionData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotionData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MotionData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MotionData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MotionData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acceleration_x_),
           0,
           offsetof(Impl_, acceleration_z_) -
               offsetof(Impl_, acceleration_x_) +
               sizeof(Impl_::acceleration_z_));
}
MotionData::~MotionData() {
  // @@protoc_insertion_point(destructor:MotionData)
  SharedDtor(*this);
}
inline void MotionData::SharedDtor(MessageLite& self) {
  MotionData& this_ = static_cast<MotionData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MotionData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MotionData(arena);
}
constexpr auto MotionData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MotionData),
                                            alignof(MotionData));
}
constexpr auto MotionData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MotionData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MotionData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MotionData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MotionData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MotionData>(), &MotionData::ByteSizeLong,
              &MotionData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MotionData, _impl_._cached_size_),
          false,
      },
      &MotionData::kDescriptorMethods,
      &descriptor_table_data_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MotionData_class_data_ =
        MotionData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MotionData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MotionData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MotionData_class_data_.tc_table);
  return MotionData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
MotionData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MotionData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MotionData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MotionData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float acceleration_x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_x_)}},
    // float acceleration_y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_y_)}},
    // float acceleration_z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float acceleration_x = 1;
    {PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_x_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float acceleration_y = 2;
    {PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_y_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float acceleration_z = 3;
    {PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_z_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MotionData::Clear() {
// @@protoc_insertion_point(message_clear_start:MotionData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.acceleration_x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.acceleration_z_) -
        reinterpret_cast<char*>(&_impl_.acceleration_x_)) + sizeof(_impl_.acceleration_z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MotionData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MotionData& this_ = static_cast<const MotionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MotionData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MotionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:MotionData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float acceleration_x = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_acceleration_x(), target);
    }
  }

  // float acceleration_y = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_acceleration_y(), target);
    }
  }

  // float acceleration_z = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_acceleration_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MotionData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MotionData::ByteSizeLong(const MessageLite& base) {
  const MotionData& this_ = static_cast<const MotionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MotionData::ByteSizeLong() const {
  const MotionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:MotionData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // float acceleration_x = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_x()) != 0) {
        total_size += 5;
      }
    }
    // float acceleration_y = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_y()) != 0) {
        total_size += 5;
      }
    }
    // float acceleration_z = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_acceleration_z()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MotionData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MotionData*>(&to_msg);
  auto& from = static_cast<const MotionData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:MotionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_acceleration_x()) != 0) {
        _this->_impl_.acceleration_x_ = from._impl_.acceleration_x_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_acceleration_y()) != 0) {
        _this->_impl_.acceleration_y_ = from._impl_.acceleration_y_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_acceleration_z()) != 0) {
        _this->_impl_.acceleration_z_ = from._impl_.acceleration_z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MotionData::CopyFrom(const MotionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MotionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MotionData::InternalSwap(MotionData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_z_)
      + sizeof(MotionData::_impl_.acceleration_z_)
      - PROTOBUF_FIELD_OFFSET(MotionData, _impl_.acceleration_x_)>(
          reinterpret_cast<char*>(&_impl_.acceleration_x_),
          reinterpret_cast<char*>(&other->_impl_.acceleration_x_));
}

::google::protobuf::Metadata MotionData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_data_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
