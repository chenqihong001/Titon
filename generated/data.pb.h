// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: data.proto
// Protobuf C++ Version: 6.32.0

#ifndef data_2eproto_2epb_2eh
#define data_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_data_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_data_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_data_2eproto;
}  // extern "C"
class HumidityData;
struct HumidityDataDefaultTypeInternal;
extern HumidityDataDefaultTypeInternal _HumidityData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull HumidityData_class_data_;
class MotionData;
struct MotionDataDefaultTypeInternal;
extern MotionDataDefaultTypeInternal _MotionData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotionData_class_data_;
class SensorData;
struct SensorDataDefaultTypeInternal;
extern SensorDataDefaultTypeInternal _SensorData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SensorData_class_data_;
class TemperatureData;
struct TemperatureDataDefaultTypeInternal;
extern TemperatureDataDefaultTypeInternal _TemperatureData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TemperatureData_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class TemperatureData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TemperatureData) */ {
 public:
  inline TemperatureData() : TemperatureData(nullptr) {}
  ~TemperatureData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TemperatureData* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TemperatureData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TemperatureData(::google::protobuf::internal::ConstantInitialized);

  inline TemperatureData(const TemperatureData& from) : TemperatureData(nullptr, from) {}
  inline TemperatureData(TemperatureData&& from) noexcept
      : TemperatureData(nullptr, ::std::move(from)) {}
  inline TemperatureData& operator=(const TemperatureData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TemperatureData& operator=(TemperatureData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TemperatureData& default_instance() {
    return *reinterpret_cast<const TemperatureData*>(
        &_TemperatureData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TemperatureData& a, TemperatureData& b) { a.Swap(&b); }
  inline void Swap(TemperatureData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TemperatureData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TemperatureData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TemperatureData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TemperatureData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TemperatureData& from) { TemperatureData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TemperatureData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TemperatureData"; }

 protected:
  explicit TemperatureData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TemperatureData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TemperatureData& from);
  TemperatureData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TemperatureData&& from) noexcept
      : TemperatureData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCelsiusFieldNumber = 1,
    kFahrenheitFieldNumber = 2,
  };
  // float celsius = 1;
  void clear_celsius() ;
  float celsius() const;
  void set_celsius(float value);

  private:
  float _internal_celsius() const;
  void _internal_set_celsius(float value);

  public:
  // float fahrenheit = 2;
  void clear_fahrenheit() ;
  float fahrenheit() const;
  void set_fahrenheit(float value);

  private:
  float _internal_fahrenheit() const;
  void _internal_set_fahrenheit(float value);

  public:
  // @@protoc_insertion_point(class_scope:TemperatureData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TemperatureData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float celsius_;
    float fahrenheit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TemperatureData_class_data_;
// -------------------------------------------------------------------

class MotionData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MotionData) */ {
 public:
  inline MotionData() : MotionData(nullptr) {}
  ~MotionData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotionData* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotionData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotionData(::google::protobuf::internal::ConstantInitialized);

  inline MotionData(const MotionData& from) : MotionData(nullptr, from) {}
  inline MotionData(MotionData&& from) noexcept
      : MotionData(nullptr, ::std::move(from)) {}
  inline MotionData& operator=(const MotionData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotionData& operator=(MotionData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotionData& default_instance() {
    return *reinterpret_cast<const MotionData*>(
        &_MotionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MotionData& a, MotionData& b) { a.Swap(&b); }
  inline void Swap(MotionData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotionData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotionData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotionData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotionData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotionData& from) { MotionData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotionData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MotionData"; }

 protected:
  explicit MotionData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotionData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotionData& from);
  MotionData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotionData&& from) noexcept
      : MotionData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccelerationXFieldNumber = 1,
    kAccelerationYFieldNumber = 2,
    kAccelerationZFieldNumber = 3,
  };
  // float acceleration_x = 1;
  void clear_acceleration_x() ;
  float acceleration_x() const;
  void set_acceleration_x(float value);

  private:
  float _internal_acceleration_x() const;
  void _internal_set_acceleration_x(float value);

  public:
  // float acceleration_y = 2;
  void clear_acceleration_y() ;
  float acceleration_y() const;
  void set_acceleration_y(float value);

  private:
  float _internal_acceleration_y() const;
  void _internal_set_acceleration_y(float value);

  public:
  // float acceleration_z = 3;
  void clear_acceleration_z() ;
  float acceleration_z() const;
  void set_acceleration_z(float value);

  private:
  float _internal_acceleration_z() const;
  void _internal_set_acceleration_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:MotionData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotionData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float acceleration_x_;
    float acceleration_y_;
    float acceleration_z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotionData_class_data_;
// -------------------------------------------------------------------

class HumidityData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:HumidityData) */ {
 public:
  inline HumidityData() : HumidityData(nullptr) {}
  ~HumidityData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HumidityData* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HumidityData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HumidityData(::google::protobuf::internal::ConstantInitialized);

  inline HumidityData(const HumidityData& from) : HumidityData(nullptr, from) {}
  inline HumidityData(HumidityData&& from) noexcept
      : HumidityData(nullptr, ::std::move(from)) {}
  inline HumidityData& operator=(const HumidityData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HumidityData& operator=(HumidityData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HumidityData& default_instance() {
    return *reinterpret_cast<const HumidityData*>(
        &_HumidityData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(HumidityData& a, HumidityData& b) { a.Swap(&b); }
  inline void Swap(HumidityData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HumidityData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HumidityData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HumidityData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HumidityData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HumidityData& from) { HumidityData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HumidityData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "HumidityData"; }

 protected:
  explicit HumidityData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HumidityData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HumidityData& from);
  HumidityData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, HumidityData&& from) noexcept
      : HumidityData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRelativeHumidityFieldNumber = 1,
  };
  // float relative_humidity = 1;
  void clear_relative_humidity() ;
  float relative_humidity() const;
  void set_relative_humidity(float value);

  private:
  float _internal_relative_humidity() const;
  void _internal_set_relative_humidity(float value);

  public:
  // @@protoc_insertion_point(class_scope:HumidityData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HumidityData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float relative_humidity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull HumidityData_class_data_;
// -------------------------------------------------------------------

class SensorData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SensorData) */ {
 public:
  inline SensorData() : SensorData(nullptr) {}
  ~SensorData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SensorData* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SensorData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SensorData(::google::protobuf::internal::ConstantInitialized);

  inline SensorData(const SensorData& from) : SensorData(nullptr, from) {}
  inline SensorData(SensorData&& from) noexcept
      : SensorData(nullptr, ::std::move(from)) {}
  inline SensorData& operator=(const SensorData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SensorData& operator=(SensorData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SensorData& default_instance() {
    return *reinterpret_cast<const SensorData*>(
        &_SensorData_default_instance_);
  }
  enum DataCase {
    kTempData = 3,
    kHumidityData = 4,
    kMotionData = 5,
    DATA_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SensorData& a, SensorData& b) { a.Swap(&b); }
  inline void Swap(SensorData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SensorData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SensorData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SensorData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SensorData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SensorData& from) { SensorData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SensorData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SensorData"; }

 protected:
  explicit SensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SensorData& from);
  SensorData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SensorData&& from) noexcept
      : SensorData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSensorIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kSamplingDurationFieldNumber = 6,
    kTempDataFieldNumber = 3,
    kHumidityDataFieldNumber = 4,
    kMotionDataFieldNumber = 5,
  };
  // string sensor_id = 1;
  void clear_sensor_id() ;
  const ::std::string& sensor_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sensor_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sensor_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sensor_id();
  void set_allocated_sensor_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sensor_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sensor_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sensor_id();

  public:
  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_timestamp();

  public:
  // .google.protobuf.Duration sampling_duration = 6;
  bool has_sampling_duration() const;
  void clear_sampling_duration() ;
  const ::google::protobuf::Duration& sampling_duration() const;
  [[nodiscard]] ::google::protobuf::Duration* PROTOBUF_NULLABLE release_sampling_duration();
  ::google::protobuf::Duration* PROTOBUF_NONNULL mutable_sampling_duration();
  void set_allocated_sampling_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sampling_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value);
  ::google::protobuf::Duration* PROTOBUF_NULLABLE unsafe_arena_release_sampling_duration();

  private:
  const ::google::protobuf::Duration& _internal_sampling_duration() const;
  ::google::protobuf::Duration* PROTOBUF_NONNULL _internal_mutable_sampling_duration();

  public:
  // .TemperatureData temp_data = 3;
  bool has_temp_data() const;
  private:
  bool _internal_has_temp_data() const;

  public:
  void clear_temp_data() ;
  const ::TemperatureData& temp_data() const;
  [[nodiscard]] ::TemperatureData* PROTOBUF_NULLABLE release_temp_data();
  ::TemperatureData* PROTOBUF_NONNULL mutable_temp_data();
  void set_allocated_temp_data(::TemperatureData* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_temp_data(::TemperatureData* PROTOBUF_NULLABLE value);
  ::TemperatureData* PROTOBUF_NULLABLE unsafe_arena_release_temp_data();

  private:
  const ::TemperatureData& _internal_temp_data() const;
  ::TemperatureData* PROTOBUF_NONNULL _internal_mutable_temp_data();

  public:
  // .HumidityData humidity_data = 4;
  bool has_humidity_data() const;
  private:
  bool _internal_has_humidity_data() const;

  public:
  void clear_humidity_data() ;
  const ::HumidityData& humidity_data() const;
  [[nodiscard]] ::HumidityData* PROTOBUF_NULLABLE release_humidity_data();
  ::HumidityData* PROTOBUF_NONNULL mutable_humidity_data();
  void set_allocated_humidity_data(::HumidityData* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_humidity_data(::HumidityData* PROTOBUF_NULLABLE value);
  ::HumidityData* PROTOBUF_NULLABLE unsafe_arena_release_humidity_data();

  private:
  const ::HumidityData& _internal_humidity_data() const;
  ::HumidityData* PROTOBUF_NONNULL _internal_mutable_humidity_data();

  public:
  // .MotionData motion_data = 5;
  bool has_motion_data() const;
  private:
  bool _internal_has_motion_data() const;

  public:
  void clear_motion_data() ;
  const ::MotionData& motion_data() const;
  [[nodiscard]] ::MotionData* PROTOBUF_NULLABLE release_motion_data();
  ::MotionData* PROTOBUF_NONNULL mutable_motion_data();
  void set_allocated_motion_data(::MotionData* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_motion_data(::MotionData* PROTOBUF_NULLABLE value);
  ::MotionData* PROTOBUF_NULLABLE unsafe_arena_release_motion_data();

  private:
  const ::MotionData& _internal_motion_data() const;
  ::MotionData* PROTOBUF_NONNULL _internal_mutable_motion_data();

  public:
  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:SensorData)
 private:
  class _Internal;
  void set_has_temp_data();
  void set_has_humidity_data();
  void set_has_motion_data();
  inline bool has_data() const;
  inline void clear_has_data();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   5, 28,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SensorData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sensor_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE timestamp_;
    ::google::protobuf::Duration* PROTOBUF_NULLABLE sampling_duration_;
    union DataUnion {
      constexpr DataUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE temp_data_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE humidity_data_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE motion_data_;
    } data_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SensorData_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SensorData

// string sensor_id = 1;
inline void SensorData::clear_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& SensorData::sensor_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.sensor_id)
  return _internal_sensor_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SensorData::set_sensor_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sensor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SensorData.sensor_id)
}
inline ::std::string* PROTOBUF_NONNULL SensorData::mutable_sensor_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sensor_id();
  // @@protoc_insertion_point(field_mutable:SensorData.sensor_id)
  return _s;
}
inline const ::std::string& SensorData::_internal_sensor_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensor_id_.Get();
}
inline void SensorData::_internal_set_sensor_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sensor_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SensorData::_internal_mutable_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.sensor_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SensorData::release_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SensorData.sensor_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.sensor_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sensor_id_.Set("", GetArena());
  }
  return released;
}
inline void SensorData::set_allocated_sensor_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.sensor_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sensor_id_.IsDefault()) {
    _impl_.sensor_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:SensorData.sensor_id)
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool SensorData::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SensorData::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SensorData::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.timestamp)
  return _internal_timestamp();
}
inline void SensorData::unsafe_arena_set_allocated_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SensorData.timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE SensorData::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE SensorData::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SensorData.timestamp)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL SensorData::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL SensorData::mutable_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:SensorData.timestamp)
  return _msg;
}
inline void SensorData::set_allocated_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:SensorData.timestamp)
}

// .TemperatureData temp_data = 3;
inline bool SensorData::has_temp_data() const {
  return data_case() == kTempData;
}
inline bool SensorData::_internal_has_temp_data() const {
  return data_case() == kTempData;
}
inline void SensorData::set_has_temp_data() {
  _impl_._oneof_case_[0] = kTempData;
}
inline void SensorData::clear_temp_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kTempData) {
    if (GetArena() == nullptr) {
      delete _impl_.data_.temp_data_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.temp_data_);
    }
    clear_has_data();
  }
}
inline ::TemperatureData* PROTOBUF_NULLABLE SensorData::release_temp_data() {
  // @@protoc_insertion_point(field_release:SensorData.temp_data)
  if (data_case() == kTempData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::TemperatureData*>(_impl_.data_.temp_data_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.data_.temp_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::TemperatureData& SensorData::_internal_temp_data() const {
  return data_case() == kTempData ? *reinterpret_cast<::TemperatureData*>(_impl_.data_.temp_data_) : reinterpret_cast<::TemperatureData&>(::_TemperatureData_default_instance_);
}
inline const ::TemperatureData& SensorData::temp_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.temp_data)
  return _internal_temp_data();
}
inline ::TemperatureData* PROTOBUF_NULLABLE SensorData::unsafe_arena_release_temp_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SensorData.temp_data)
  if (data_case() == kTempData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::TemperatureData*>(_impl_.data_.temp_data_);
    _impl_.data_.temp_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SensorData::unsafe_arena_set_allocated_temp_data(
    ::TemperatureData* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_data();
  if (value) {
    set_has_temp_data();
    _impl_.data_.temp_data_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SensorData.temp_data)
}
inline ::TemperatureData* PROTOBUF_NONNULL SensorData::_internal_mutable_temp_data() {
  if (data_case() != kTempData) {
    clear_data();
    set_has_temp_data();
    _impl_.data_.temp_data_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::TemperatureData>(GetArena()));
  }
  return reinterpret_cast<::TemperatureData*>(_impl_.data_.temp_data_);
}
inline ::TemperatureData* PROTOBUF_NONNULL SensorData::mutable_temp_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::TemperatureData* _msg = _internal_mutable_temp_data();
  // @@protoc_insertion_point(field_mutable:SensorData.temp_data)
  return _msg;
}

// .HumidityData humidity_data = 4;
inline bool SensorData::has_humidity_data() const {
  return data_case() == kHumidityData;
}
inline bool SensorData::_internal_has_humidity_data() const {
  return data_case() == kHumidityData;
}
inline void SensorData::set_has_humidity_data() {
  _impl_._oneof_case_[0] = kHumidityData;
}
inline void SensorData::clear_humidity_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kHumidityData) {
    if (GetArena() == nullptr) {
      delete _impl_.data_.humidity_data_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.humidity_data_);
    }
    clear_has_data();
  }
}
inline ::HumidityData* PROTOBUF_NULLABLE SensorData::release_humidity_data() {
  // @@protoc_insertion_point(field_release:SensorData.humidity_data)
  if (data_case() == kHumidityData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::HumidityData*>(_impl_.data_.humidity_data_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.data_.humidity_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::HumidityData& SensorData::_internal_humidity_data() const {
  return data_case() == kHumidityData ? *reinterpret_cast<::HumidityData*>(_impl_.data_.humidity_data_) : reinterpret_cast<::HumidityData&>(::_HumidityData_default_instance_);
}
inline const ::HumidityData& SensorData::humidity_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.humidity_data)
  return _internal_humidity_data();
}
inline ::HumidityData* PROTOBUF_NULLABLE SensorData::unsafe_arena_release_humidity_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SensorData.humidity_data)
  if (data_case() == kHumidityData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::HumidityData*>(_impl_.data_.humidity_data_);
    _impl_.data_.humidity_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SensorData::unsafe_arena_set_allocated_humidity_data(
    ::HumidityData* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_data();
  if (value) {
    set_has_humidity_data();
    _impl_.data_.humidity_data_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SensorData.humidity_data)
}
inline ::HumidityData* PROTOBUF_NONNULL SensorData::_internal_mutable_humidity_data() {
  if (data_case() != kHumidityData) {
    clear_data();
    set_has_humidity_data();
    _impl_.data_.humidity_data_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::HumidityData>(GetArena()));
  }
  return reinterpret_cast<::HumidityData*>(_impl_.data_.humidity_data_);
}
inline ::HumidityData* PROTOBUF_NONNULL SensorData::mutable_humidity_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::HumidityData* _msg = _internal_mutable_humidity_data();
  // @@protoc_insertion_point(field_mutable:SensorData.humidity_data)
  return _msg;
}

// .MotionData motion_data = 5;
inline bool SensorData::has_motion_data() const {
  return data_case() == kMotionData;
}
inline bool SensorData::_internal_has_motion_data() const {
  return data_case() == kMotionData;
}
inline void SensorData::set_has_motion_data() {
  _impl_._oneof_case_[0] = kMotionData;
}
inline void SensorData::clear_motion_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (data_case() == kMotionData) {
    if (GetArena() == nullptr) {
      delete _impl_.data_.motion_data_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.data_.motion_data_);
    }
    clear_has_data();
  }
}
inline ::MotionData* PROTOBUF_NULLABLE SensorData::release_motion_data() {
  // @@protoc_insertion_point(field_release:SensorData.motion_data)
  if (data_case() == kMotionData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::MotionData*>(_impl_.data_.motion_data_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.data_.motion_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::MotionData& SensorData::_internal_motion_data() const {
  return data_case() == kMotionData ? *reinterpret_cast<::MotionData*>(_impl_.data_.motion_data_) : reinterpret_cast<::MotionData&>(::_MotionData_default_instance_);
}
inline const ::MotionData& SensorData::motion_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.motion_data)
  return _internal_motion_data();
}
inline ::MotionData* PROTOBUF_NULLABLE SensorData::unsafe_arena_release_motion_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:SensorData.motion_data)
  if (data_case() == kMotionData) {
    clear_has_data();
    auto* temp = reinterpret_cast<::MotionData*>(_impl_.data_.motion_data_);
    _impl_.data_.motion_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SensorData::unsafe_arena_set_allocated_motion_data(
    ::MotionData* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_data();
  if (value) {
    set_has_motion_data();
    _impl_.data_.motion_data_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SensorData.motion_data)
}
inline ::MotionData* PROTOBUF_NONNULL SensorData::_internal_mutable_motion_data() {
  if (data_case() != kMotionData) {
    clear_data();
    set_has_motion_data();
    _impl_.data_.motion_data_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::MotionData>(GetArena()));
  }
  return reinterpret_cast<::MotionData*>(_impl_.data_.motion_data_);
}
inline ::MotionData* PROTOBUF_NONNULL SensorData::mutable_motion_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::MotionData* _msg = _internal_mutable_motion_data();
  // @@protoc_insertion_point(field_mutable:SensorData.motion_data)
  return _msg;
}

// .google.protobuf.Duration sampling_duration = 6;
inline bool SensorData::has_sampling_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sampling_duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& SensorData::_internal_sampling_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.sampling_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& SensorData::sampling_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SensorData.sampling_duration)
  return _internal_sampling_duration();
}
inline void SensorData::unsafe_arena_set_allocated_sampling_duration(
    ::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sampling_duration_);
  }
  _impl_.sampling_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SensorData.sampling_duration)
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE SensorData::release_sampling_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Duration* released = _impl_.sampling_duration_;
  _impl_.sampling_duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* PROTOBUF_NULLABLE SensorData::unsafe_arena_release_sampling_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SensorData.sampling_duration)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Duration* temp = _impl_.sampling_duration_;
  _impl_.sampling_duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL SensorData::_internal_mutable_sampling_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sampling_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.sampling_duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.sampling_duration_;
}
inline ::google::protobuf::Duration* PROTOBUF_NONNULL SensorData::mutable_sampling_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::google::protobuf::Duration* _msg = _internal_mutable_sampling_duration();
  // @@protoc_insertion_point(field_mutable:SensorData.sampling_duration)
  return _msg;
}
inline void SensorData::set_allocated_sampling_duration(::google::protobuf::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sampling_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.sampling_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:SensorData.sampling_duration)
}

inline bool SensorData::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void SensorData::clear_has_data() {
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}
inline SensorData::DataCase SensorData::data_case() const {
  return SensorData::DataCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TemperatureData

// float celsius = 1;
inline void TemperatureData::clear_celsius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.celsius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline float TemperatureData::celsius() const {
  // @@protoc_insertion_point(field_get:TemperatureData.celsius)
  return _internal_celsius();
}
inline void TemperatureData::set_celsius(float value) {
  _internal_set_celsius(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:TemperatureData.celsius)
}
inline float TemperatureData::_internal_celsius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.celsius_;
}
inline void TemperatureData::_internal_set_celsius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.celsius_ = value;
}

// float fahrenheit = 2;
inline void TemperatureData::clear_fahrenheit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fahrenheit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline float TemperatureData::fahrenheit() const {
  // @@protoc_insertion_point(field_get:TemperatureData.fahrenheit)
  return _internal_fahrenheit();
}
inline void TemperatureData::set_fahrenheit(float value) {
  _internal_set_fahrenheit(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:TemperatureData.fahrenheit)
}
inline float TemperatureData::_internal_fahrenheit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fahrenheit_;
}
inline void TemperatureData::_internal_set_fahrenheit(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fahrenheit_ = value;
}

// -------------------------------------------------------------------

// HumidityData

// float relative_humidity = 1;
inline void HumidityData::clear_relative_humidity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_humidity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline float HumidityData::relative_humidity() const {
  // @@protoc_insertion_point(field_get:HumidityData.relative_humidity)
  return _internal_relative_humidity();
}
inline void HumidityData::set_relative_humidity(float value) {
  _internal_set_relative_humidity(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:HumidityData.relative_humidity)
}
inline float HumidityData::_internal_relative_humidity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relative_humidity_;
}
inline void HumidityData::_internal_set_relative_humidity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_humidity_ = value;
}

// -------------------------------------------------------------------

// MotionData

// float acceleration_x = 1;
inline void MotionData::clear_acceleration_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline float MotionData::acceleration_x() const {
  // @@protoc_insertion_point(field_get:MotionData.acceleration_x)
  return _internal_acceleration_x();
}
inline void MotionData::set_acceleration_x(float value) {
  _internal_set_acceleration_x(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:MotionData.acceleration_x)
}
inline float MotionData::_internal_acceleration_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acceleration_x_;
}
inline void MotionData::_internal_set_acceleration_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_x_ = value;
}

// float acceleration_y = 2;
inline void MotionData::clear_acceleration_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline float MotionData::acceleration_y() const {
  // @@protoc_insertion_point(field_get:MotionData.acceleration_y)
  return _internal_acceleration_y();
}
inline void MotionData::set_acceleration_y(float value) {
  _internal_set_acceleration_y(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:MotionData.acceleration_y)
}
inline float MotionData::_internal_acceleration_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acceleration_y_;
}
inline void MotionData::_internal_set_acceleration_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_y_ = value;
}

// float acceleration_z = 3;
inline void MotionData::clear_acceleration_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline float MotionData::acceleration_z() const {
  // @@protoc_insertion_point(field_get:MotionData.acceleration_z)
  return _internal_acceleration_z();
}
inline void MotionData::set_acceleration_z(float value) {
  _internal_set_acceleration_z(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:MotionData.acceleration_z)
}
inline float MotionData::_internal_acceleration_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acceleration_z_;
}
inline void MotionData::_internal_set_acceleration_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acceleration_z_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // data_2eproto_2epb_2eh
